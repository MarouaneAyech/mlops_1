name: workflow
on: [push]
jobs:
  run:
    runs-on: ubuntu-latest
    env:
      GDRIVE_CREDENTIALS_DATA: ${{ secrets.GDRIVE_CREDENTIALS_DATA }}
    steps:
      # Étape 1 : Cloner le dépôt
      - uses: actions/checkout@v3
      # Etape 2 : Installer Python
      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      # Etape 3 : Installer les dépendences du Python
      - name : Installer les dépendences
        run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt
      # Étape 6 : Installer Node.js et CML
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - uses: iterative/setup-cml@v1
      # Étape 4 : Télécharger les artifacts données (data & models) avec DVC
      - name: Télécharger les artifacts des données
        run: |
            # Exécuter dvc pull pour télécharger les artefacts
            dvc pull
      # Etape 5 : 
      - name : Entraîner le modèle et gérer les données avec DVC
        run: |
            python script.py
            dvc add ./data/ ./models/
            dvc push
      # Étape 6 : Installer Node.js et CML
      - name: Generate Report
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Get the report
          echo "## Metrics" > report.md
          cat metrics.txt >> report.md
          # awk 'NR%4{print "    " $0}{print ""}' metrics.txt >> report.md
          cml comment create report.md